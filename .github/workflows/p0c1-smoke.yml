name: P0C1 Smoke + Verify

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print context
        run: |
          set -euxo pipefail
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_SHA=$GITHUB_SHA"
          uname -a
          git --version
          python3 --version

      - name: Show repo tree
        run: |
          set -euxo pipefail
          ls -la
          echo "---- examples ----"; ls -la examples || true
          echo "---- crapssim_control ----"; ls -la crapssim_control || true
          echo "âœ… Smoke passed"

  verify:
    runs-on: ubuntu-latest
    needs: smoke
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONHASHSEED: "0"
      SEED: "123"
      ROLLS: "50"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create a tiny spec in /tmp so we don't depend on repo files
      - name: Write minimal spec
        run: |
          set -euxo pipefail
          cat > /tmp/spec.json <<'JSON'
          {
            "table": { "level": 10 },
            "variables": { "units": 12 },
            "modes": {
              "Main": { "template": { "pass_line": 10 } }
            },
            "rules": [
              { "on": { "event": "comeout" },
                "do": [ { "action": "set", "bet_type": "pass_line", "amount": 10 } ] }
            ],
            "run": { "rolls": 50 }
          }
          JSON
          head -n 20 /tmp/spec.json

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install engine & package
        run: |
          set -euxo pipefail
          python -m pip install -U pip
          pip install "crapssim" "PyYAML"
          pip install -e .
          python - <<'PY'
import importlib.metadata as m
print("crapssim=="+m.version("crapssim"))
print("crapssim_control OK")
PY

      - name: Run (plain)
        run: |
          set -euxo pipefail
          python - <<'PY' > out_plain.txt 2>&1 || true
from crapssim_control.cli import main
import sys
sys.exit(main(['run','/tmp/spec.json','--seed','${SEED}','--rolls','${ROLLS}']))
PY
          tail -n 5 out_plain.txt || true

      - name: Run (with flags)
        run: |
          set -euxo pipefail
          python - <<'PY' > out_flags.txt 2>&1 || true
from crapssim_control.cli import main
import sys
sys.exit(main(['run','/tmp/spec.json','--seed','${SEED}','--rolls','${ROLLS}',
               '--demo-fallbacks','--strict','--no-embed-analytics']))
PY
          tail -n 5 out_flags.txt || true

      - name: Compare stdout (flags must be inert)
        run: |
          set -euxo pipefail
          diff -u out_plain.txt out_flags.txt

      - name: Show RESULT
        run: |
          set -euxo pipefail
          echo "Plain:"; grep '^RESULT:' out_plain.txt || true
          echo "Flags:"; grep '^RESULT:' out_flags.txt || true

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: p0c1-verify
          path: |
            /tmp/spec.json
            out_plain.txt
            out_flags.txt