name: P0C1 – Inert Flag Framework Verification

on:
  push:
    branches: [ "**" ]
    paths:
      - "crapssim_control/**"
      - ".github/workflows/p0c1-verify.yml"
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  verify-inertness:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      SPEC_PATH: "examples/quickstart_spec.json"
      SEED: "123"
      ROLLS: "50"
      CMD: "python -m crapssim_control.cli"
      CSC_DEBUG: "0"

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Resolve SHAs
        id: shas
        run: |
          echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "PREV_SHA=$(git rev-parse HEAD^)" >> $GITHUB_OUTPUT

      # NEW: freeze the spec from HEAD so both runs use the same file
      - name: Freeze spec from HEAD
        run: |
          mkdir -p /tmp/p0c1
          cp "$SPEC_PATH" /tmp/p0c1/spec.json

      # NEW: install once to capture exact engine version
      - name: Set up Python & pin engine version
        id: pin
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install engine once and record version
        run: |
          python -m pip install -U pip
          pip install "crapssim" "PyYAML>=6.0"
          python - <<'PY' > /tmp/p0c1/crapssim_version.txt
import importlib.metadata as m; print(m.version("crapssim"))
PY
          echo "CRAPSSIM_VERSION=$(cat /tmp/p0c1/crapssim_version.txt)" >> $GITHUB_OUTPUT

      # ---------- BEFORE: HEAD^ ----------
      - name: Checkout previous commit (baseline)
        run: git checkout ${{ steps.shas.outputs.PREV_SHA }}

      - name: Install deps (baseline, pinned engine)
        run: |
          python -m pip install -U pip
          pip install --force-reinstall --no-deps "crapssim==${{ steps.pin.outputs.CRAPSSIM_VERSION }}" "PyYAML>=6.0"
          pip install -e .

      - name: Run baseline (stdout + RESULT)
        run: |
          mkdir -p baselines/p0c1/before
          set -e
          $CMD run "/tmp/p0c1/spec.json" --seed "$SEED" --rolls "$ROLLS" > baselines/p0c1/before/out.txt 2>&1
          grep '^RESULT:' baselines/p0c1/before/out.txt > baselines/p0c1/before/result.txt || true
          $CMD run --help > baselines/p0c1/before/help.txt 2>&1 || true

      # ---------- AFTER: HEAD ----------
      - name: Checkout current commit (candidate)
        run: git checkout ${{ steps.shas.outputs.HEAD_SHA }}

      - name: Install deps (candidate, pinned engine)
        run: |
          python -m pip install -U pip
          pip install --force-reinstall --no-deps "crapssim==${{ steps.pin.outputs.CRAPSSIM_VERSION }}" "PyYAML>=6.0"
          pip install -e .

      - name: Run candidate (stdout + RESULT)
        run: |
          mkdir -p baselines/p0c1/after
          set -e
          $CMD run "/tmp/p0c1/spec.json" --seed "$SEED" --rolls "$ROLLS" > baselines/p0c1/after/out.txt 2>&1
          grep '^RESULT:' baselines/p0c1/after/out.txt > baselines/p0c1/after/result.txt || true
          $CMD run --help > baselines/p0c1/after/help.txt 2>&1 || true

      # CHANGED: compare only RESULT across commits (behavior invariant)
      - name: Compare BEFORE vs AFTER (RESULT line must match)
        run: |
          set -e
          diff -u baselines/p0c1/before/result.txt baselines/p0c1/after/result.txt

      # Keep the stronger check (within HEAD) that flags are inert (full stdout)
      - name: Flags are accepted but inert (candidate)
        run: |
          set -e
          $CMD run "/tmp/p0c1/spec.json" --seed "$SEED" --rolls "$ROLLS" \
            --demo-fallbacks --strict --no-embed-analytics \
            > baselines/p0c1/after/out_flags.txt 2>&1
          diff -u baselines/p0c1/after/out.txt baselines/p0c1/after/out_flags.txt

      - name: Emit summary
        if: ${{ success() }}
        run: echo "✅ P0·C1 verified (pinned engine, frozen spec, RESULT stable; flags inert)."